language: c
sudo: required

matrix:
  include:
    - os: linux
      compiler: gcc
      before_install:
        - sudo apt-get install gfortran
        - sudo pip install -U pytest
    - os: linux
      compiler: gcc
      before_install:
        - sudo apt-get install gfortran
        - sudo apt-get install mpich libmpich-dev
        - sudo pip install -U pytest
      before_script:
        - cd ../tests
        - pytest -k "mpi"
    - os: linux
      compiler: gcc
      env: OMPI_MCA_btl_base_warn_component_unused=0
      before_install:
        - sudo apt-get install gfortran
        - sudo apt-get install openmpi-bin openmpi-doc libopenmpi-dev
        - sudo pip install mpi4py
        - sudo pip install numpy
        - sudo pip install -U pytest
        - ls /usr/lib/openmpi/
        - ls /usr/lib/openmpi/lib/
      before_script:
        # Run the mdi tests
        - cd ../tests
        - pytest -k "mpi"
    - os: osx
      compiler: gcc
      before_install:
        - brew update > /dev/null
        - brew install gcc > /dev/null
        - export FC=gfortran
        - sudo pip install -U pytest
    - os: windows
      compiler: gcc
      env: PATH=/c/Python36:/c/Python36/Scripts:$PATH
      before_install:
         # install pytest
         - choco install python --version 3.6.8
         - python -m pip install --upgrade pip
         - pip install -U pytest

         # remove the sh.exe file, which prevents MinGW from working
         - where sh > sh_loc.txt
         - powershell -command "cat sh_loc.txt | rm"
      install:
         - mkdir build
         - cd build
         - cmake -G "MinGW Makefiles" ../
         - mingw32-make

         # Copy the .dll files into the binary directory
         - cp lib/mdi/MDI_Library/*.dll* .
         - cp MDI_Test_Codes/STUBS_MPI/*.dll* .

install:
  - mkdir build
  - cd build
  - cmake ..
  - make VERBOSE=1

script:
  - cd ../tests
  - pytest -k "lib"
  - pytest -k "tcp"
